// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiftArena.Models.Contexts;

namespace RiftARENA.Migrations
{
    [DbContext(typeof(RiftArenaContext))]
    [Migration("20211129151012_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RiftArena.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("gamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("numberMembers")
                        .HasColumnType("int");

                    b.Property<int>("numberOfDefeats")
                        .HasColumnType("int");

                    b.Property<int>("numberOfWins")
                        .HasColumnType("int");

                    b.Property<string>("poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("teamLeaderUserID")
                        .HasColumnType("int");

                    b.Property<string>("teamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("teamLeaderUserID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("RiftArena.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContaRiot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumVitoriasTotal")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Tier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RiftArena.Models.Team", b =>
                {
                    b.HasOne("RiftArena.Models.User", "teamLeader")
                        .WithMany()
                        .HasForeignKey("teamLeaderUserID");

                    b.Navigation("teamLeader");
                });

            modelBuilder.Entity("RiftArena.Models.User", b =>
                {
                    b.HasOne("RiftArena.Models.Team", null)
                        .WithMany("members")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("RiftArena.Models.Team", b =>
                {
                    b.Navigation("members");
                });
#pragma warning restore 612, 618
        }
    }
}
